#define BLYNK_TEMPLATE_ID "TMPL6ow1mZClt"
#define BLYNK_TEMPLATE_NAME "IrrigationSystem"
#define BLYNK_AUTH_TOKEN "_t6kcdbzQfn35Xa7-ngqaxwR0SJDRe3D"

#include <ESP8266WiFi.h>
#include <BlynkSimpleEsp8266.h>
#include <DHT.h>

// Blynk Auth & Wi-Fi
char auth[] = "_t6kcdbzQfn35Xa7-ngqaxwR0SJDRe3D";
char ssid[] = "UNDER GROUND SQUAD";
char pass[] = "Shuvo@123";

// Sensor Pins
#define sensorPin A0      // Soil moisture sensor
#define pumpPin D1        // Pump
#define DHTPIN D2         // DHT11 sensor pin
#define DHTTYPE DHT11

DHT dht(DHTPIN, DHTTYPE);

int threshold = 300;       // Moisture threshold
bool manualPump = false;   // Manual pump status

BlynkTimer timer;

// Manual pump control from Blynk button (V2)
BLYNK_WRITE(V2) {
  manualPump = param.asInt();  // 1 = ON, 0 = OFF
}

// Function to read sensors and update Blynk
void sendSensorData() {
  // --- Soil Moisture ---
  int moistureRaw = analogRead(sensorPin);
  int moisturePercent = map(moistureRaw, 1023, 0, 0, 100);

  bool autoPump = (moistureRaw < threshold);
  bool finalPump = autoPump || manualPump;

  digitalWrite(pumpPin, finalPump ? HIGH : LOW);

  Blynk.virtualWrite(V0, moisturePercent);  // Moisture %
  Blynk.virtualWrite(V1, finalPump);        // Pump status LED

  Serial.print("Moisture (%): ");
  Serial.print(moisturePercent);
  Serial.print(" | Pump: ");
  Serial.println(finalPump ? "ON" : "OFF");

  // --- DHT11 Sensor ---
  float temp = dht.readTemperature();      // Celsius
  float hum = dht.readHumidity();

  if (isnan(temp) || isnan(hum)) {
    Serial.println("Failed to read DHT11 sensor!");
  } else {
    Blynk.virtualWrite(V3, temp); // Temperature to Blynk
    Blynk.virtualWrite(V4, hum);  // Humidity to Blynk

    Serial.print("Temp (Â°C): ");
    Serial.print(temp);
    Serial.print(" | Humidity (%): ");
    Serial.println(hum);
  }
}

void setup() {
  Serial.begin(9600);
  pinMode(pumpPin, OUTPUT);
  digitalWrite(pumpPin, LOW); // Start OFF

  dht.begin();                // Initialize DHT11
  Blynk.begin(auth, ssid, pass);

  timer.setInterval(1000L, sendSensorData);  // Every 1 sec
}

void loop() {
  Blynk.run();
  timer.run();
}
#define manualSwitchPin D5  // Physical button

void setup() {
  Serial.begin(9600);
  pinMode(pumpPin, OUTPUT);
  digitalWrite(pumpPin, LOW);

  pinMode(manualSwitchPin, INPUT_PULLUP);  // Enable internal pull-up

  dht.begin();
  Blynk.begin(auth, ssid, pass);

  timer.setInterval(1000L, sendSensorData);
}

void sendSensorData() {
  // --- Soil Moisture ---
  int moistureRaw = analogRead(sensorPin);
  int moisturePercent = map(moistureRaw, 1023, 0, 0, 100);

  bool autoPump = (moistureRaw < threshold);
  
  // Check both Blynk button and physical switch
  bool manualPumpState = manualPump || (digitalRead(manualSwitchPin) == LOW);

  bool finalPump = autoPump || manualPumpState;
  digitalWrite(pumpPin, finalPump ? HIGH : LOW);

  // Send data to Blynk
  Blynk.virtualWrite(V0, moisturePercent);
  Blynk.virtualWrite(V1, finalPump);

  // --- DHT11 Sensor ---
  float temp = dht.readTemperature();
  float hum = dht.readHumidity();
  if (!isnan(temp) && !isnan(hum)) {
    Blynk.virtualWrite(V3, temp);
    Blynk.virtualWrite(V4, hum);
  }
}

